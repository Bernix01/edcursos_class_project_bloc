/**
  *
  * Creado el 23 de noviembre de 2019
  * Por: Guillermo Bernal
  * Version de plantilla: 1.0
  *
*/

import 'dart:async';
import 'package:bloc/bloc.dart';
import 'package:${appName}${relative}/index.dart';
import 'dart:developer' as developer;

class ${upperName}Bloc extends Bloc<${upperName}Event, ${upperName}State> {
  
  @override
  Future<void> close() async{
    // dispose objects
    super.close();
  }

  ${upperName}State get initialState => Un${upperName}State(0);

  @override
  Stream<${upperName}State> mapEventToState(
    ${upperName}Event event,
  ) async* {
    try {
      yield await event.applyAsync(currentState: state, bloc: this);
    } catch (_, stackTrace) {
      developer.log('$_', name: '${upperName}Bloc', error: _, stackTrace: stackTrace);
      yield state;
    }
  }
}
